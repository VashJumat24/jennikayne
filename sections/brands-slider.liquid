{% comment %}
  Brand Carousel Section
  Allows configuration for the number of items displayed on desktop, tablet, and mobile.
{% endcomment %}

<div class="brand-carousel">
  {% if section.blocks.size > 0 %}
    <div class="carousel-wrapper">
      <div class="carousel-track">
        {% for block in section.blocks %}
          <div class="carousel-item" data-collection="{{ block.settings.brand_collection | handleize }}">
            <a href="/collections/{{ block.settings.brand_collection | handleize }}" class="brand-link" aria-label="Shop by {{ block.settings.brand_collection }}">
              <img src="{{ block.settings.brand_image | img_url: 'medium' }}" alt="{{ block.settings.brand_collection }}">
              <div class="brand-overlay">
                <span>{{ block.settings.brand_collection }}</span>
              </div>
            </a>
          </div>
        {% endfor %}
      </div>
    </div>
  {% else %}
    <p>No brands to show.</p>
  {% endif %}
</div>
{{ 'brand-carousel.css' | asset_url | stylesheet_tag: preload: preload_stylesheet }}
{% comment %}
  Custom JavaScript for controlling slider items per view based on screen size and autoplay functionality.
{% endcomment %}
<script>
  document.addEventListener("DOMContentLoaded", function() {
    const carouselTrack = document.querySelector('.carousel-track');
    const carouselItems = document.querySelectorAll('.carousel-item');
    let currentIndex = 0;

    // Get the range values from settings
    const desktopItems = {{ section.settings.desktop_items }};
    const tabletItems = {{ section.settings.tablet_items }};
    const mobileItems = {{ section.settings.mobile_items }};
    const autoplayDelay = {{ section.settings.autoplay_delay }}; // Delay in milliseconds

    // Function to update the number of items displayed based on screen size
    function updateCarouselDisplay() {
      const screenWidth = window.innerWidth;

      // Decide how many items to show based on the screen width
      let itemsToShow = desktopItems;

      if (screenWidth <= 1024 && screenWidth > 768) {
        itemsToShow = tabletItems;
      } else if (screenWidth <= 768) {
        itemsToShow = mobileItems;
      }

      // Adjust the carousel display based on the number of items to show
      const itemWidth = 100 / itemsToShow; // Calculate width based on number of items
      carouselItems.forEach(item => {
        item.style.width = `${itemWidth}%`; // Update width of each carousel item
      });

      // Automatically adjust the carousel track width
      carouselTrack.style.width = `${itemWidth * carouselItems.length}%`;
    }

    // Function to move the carousel to the next item (autoplay)
    function moveToNextItem() {
      currentIndex = (currentIndex + 1) % carouselItems.length;
      updateCarouselPosition();
    }

    // Function to update the carousel position
    function updateCarouselPosition() {
      const offset = -100 * currentIndex; // Shift the carousel track
      carouselTrack.style.transform = `translateX(${offset}%)`;
    }

    // Initialize display on page load
    updateCarouselDisplay();

    // Start autoplay
    setInterval(moveToNextItem, autoplayDelay);

    // Update display when window is resized
    window.addEventListener('resize', updateCarouselDisplay);
  });
</script>

{% schema %}
{
  "name": "Brand Carousel",
  "settings": [
    {
      "type": "range",
      "id": "desktop_items",
      "label": "Items on Desktop",
      "min": 1,
      "max": 10,
      "step": 1,
      "default": 4
    },
    {
      "type": "range",
      "id": "tablet_items",
      "label": "Items on Tablet",
      "min": 1,
      "max": 10,
      "step": 1,
      "default": 3
    },
    {
      "type": "range",
      "id": "mobile_items",
      "label": "Items on Mobile",
      "min": 1,
      "max": 10,
      "step": 1,
      "default": 2
    },
    {
      "type": "range",
      "id": "autoplay_delay",
      "label": "Autoplay Delay (ms)",
      "min": 1000,
      "max": 5000,
      "step": 500,
      "default": 3000
    }
  ],
  "blocks": [
    {
      "type": "brand",
      "name": "Brand",
      "settings": [
        {
          "type": "image_picker",
          "id": "brand_image",
          "label": "Brand Image"
        },
        {
          "type": "text",
          "id": "brand_collection",
          "label": "Brand Collection Name",
          "default": "Default Brand"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Brand Carousel",
      "blocks": [
        {
          "type": "brand"
        },
        {
          "type": "brand"
        },
        {
          "type": "brand"
        },
        {
          "type": "brand"
        }
      ]
    }
  ]
}
{% endschema %}
