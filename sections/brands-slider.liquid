{% comment %}
  Brand Carousel Section
  Allows configuring the number of items shown for different screen sizes and sets up a carousel that loops and auto-plays.
{% endcomment %}

<div class="brand-carousel">
  {% if section.blocks.size > 0 %}
    <div class="carousel-wrapper">
      <div class="carousel-container">
        {% for block in section.blocks %}
          <div class="carousel-item" data-collection="{{ block.settings.brand_collection | handleize }}">
            <a href="/collections/{{ block.settings.brand_collection | handleize }}" class="brand-link" aria-label="Shop by {{ block.settings.brand_collection }}">
              <img src="{{ block.settings.brand_image | img_url: 'medium' }}" alt="{{ block.settings.brand_collection }}">
              <div class="brand-overlay">
                <span>{{ block.settings.brand_collection }}</span>
              </div>
            </a>
          </div>
        {% endfor %}
      </div>
    </div>
  {% else %}
    <p>No brands to display.</p>
  {% endif %}
</div>

{% comment %}
  JavaScript for autoplay, loop, and controlling the number of items displayed based on screen size
{% endcomment %}
<script>
  document.addEventListener("DOMContentLoaded", function() {
    const carouselContainer = document.querySelector('.carousel-container');
    const items = document.querySelectorAll('.carousel-item');
    const itemCount = items.length;
    
    // Get the range values from settings
    const desktopItems = {{ section.settings.desktop_items }};
    const tabletItems = {{ section.settings.tablet_items }};
    const mobileItems = {{ section.settings.mobile_items }};
    
    // Function to update the number of items displayed based on screen size
    function updateCarouselDisplay() {
      const screenWidth = window.innerWidth;

      let itemsToShow = desktopItems;
      if (screenWidth <= 1024 && screenWidth > 768) {
        itemsToShow = tabletItems;
      } else if (screenWidth <= 768) {
        itemsToShow = mobileItems;
      }

      // Calculate item width based on the number of items to show
      const itemWidth = 100 / itemsToShow;
      items.forEach(item => {
        item.style.width = itemWidth + '%';
      });

      // Update carousel wrapper width to accommodate all items
      carouselContainer.style.width = itemWidth * itemCount + '%';
    }

    // Autoplay and looping functionality
    let currentIndex = 0;
    const autoplayInterval = 3000; // 3 seconds for autoplay

    function startAutoplay() {
      setInterval(function() {
        currentIndex++;
        if (currentIndex >= itemCount) {
          currentIndex = 0; // Loop back to the start
        }
        carouselContainer.style.transform = `translateX(-${(100 / items.length) * currentIndex}%)`;
      }, autoplayInterval);
    }

    // Initialize the carousel display and start autoplay
    updateCarouselDisplay();
    startAutoplay();

    // Update display when window is resized
    window.addEventListener('resize', updateCarouselDisplay);
  });
</script>

{% schema %}
{
  "name": "Brand Carousel",
  "settings": [
    {
      "type": "range",
      "id": "desktop_items",
      "label": "Items on Desktop",
      "min": 1,
      "max": 10,
      "step": 1,
      "default": 4
    },
    {
      "type": "range",
      "id": "tablet_items",
      "label": "Items on Tablet",
      "min": 1,
      "max": 10,
      "step": 1,
      "default": 3
    },
    {
      "type": "range",
      "id": "mobile_items",
      "label": "Items on Mobile",
      "min": 1,
      "max": 10,
      "step": 1,
      "default": 2
    }
  ],
  "blocks": [
    {
      "type": "brand",
      "name": "Brand",
      "settings": [
        {
          "type": "image_picker",
          "id": "brand_image",
          "label": "Brand Image"
        },
        {
          "type": "text",
          "id": "brand_collection",
          "label": "Brand Collection Name",
          "default": "Default Brand"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Brand Carousel",
      "blocks": [
        {
          "type": "brand"
        },
        {
          "type": "brand"
        },
        {
          "type": "brand"
        },
        {
          "type": "brand"
        }
      ]
    }
  ]
}
{% endschema %}
