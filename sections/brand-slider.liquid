<section class="brands-slider">
  <div class="slider-container">
    {% for brand in section.settings.brands %}
      <div class="brand-item" data-brand="{{ brand.brand_name }}">
        <img src="{{ brand.brand_image | file_url }}" alt="{{ brand.brand_name }}">
        <div class="brand-overlay">
          <span>{{ brand.brand_name }}</span>
        </div>
      </div>
    {% endfor %}
  </div>
</section>

{% schema %}
{
  "name": "Brands Slider",
  "settings": [
    {
      "type": "list",
      "id": "brands",
      "label": "Brands",
      "default": [],
      "item": {
        "type": "object",
        "properties": [
          {
            "type": "image_picker",
            "id": "brand_image",
            "label": "Brand Image"
          },
          {
            "type": "text",
            "id": "brand_name",
            "label": "Brand Name"
          }
        ]
      }
    },
    {
      "type": "number",
      "id": "desktop_items",
      "label": "Items to display on desktop",
      "default": 4,
      "min": 1,
      "max": 6
    },
    {
      "type": "number",
      "id": "tablet_items",
      "label": "Items to display on tablet",
      "default": 3,
      "min": 1,
      "max": 6
    },
    {
      "type": "number",
      "id": "mobile_items",
      "label": "Items to display on mobile",
      "default": 2,
      "min": 1,
      "max": 6
    }
  ],
  "presets": [
    {
      "name": "Brands Slider",
      "category": "Custom"
    }
  ]
}
{% endschema %}


{% style %}
  .brands-slider {
    margin-bottom: 20px;
  }

  .slider-container {
    display: flex;
    overflow-x: scroll;
    scroll-snap-type: x mandatory;
    gap: 15px;
  }

  .brand-item {
    flex: 0 0 calc(100% / {{ section.settings.desktop_items }} - 10px);
    position: relative;
    text-align: center;
    cursor: pointer;
    scroll-snap-align: center;
  }

  .brand-item img {
    width: 100%;
    border-radius: 8px;
    transition: transform 0.3s ease;
  }

  .brand-item:hover img {
    transform: scale(1.1);
  }

  .brand-overlay {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    background: rgba(0, 0, 0, 0.5);
    color: #fff;
    padding: 10px;
    text-align: center;
  }

  @media (max-width: 768px) {
    .brand-item {
      flex: 0 0 calc(100% / {{ section.settings.tablet_items }} - 10px);
    }
  }

  @media (max-width: 480px) {
    .brand-item {
      flex: 0 0 calc(100% / {{ section.settings.mobile_items }} - 10px);
    }
  }
{% endstyle %}

{% javascript %}

   document.addEventListener('DOMContentLoaded', () => {

        //Brand Items Variable
        const collectionTitle = document.querySelector('.collection-title');
        const productGrid = document.querySelector('.product-grid');

        //Slider Variable
        const sliderContainer = document.querySelector('.slider-container');
        const brandItems = document.querySelectorAll('.brand-item');
        const prevButton = document.createElement('button');
        const nextButton = document.createElement('button');

        // Add navigation buttons
        prevButton.classList.add('slider-nav', 'prev');
        prevButton.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24" fill="currentColor"><path d="M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6z"/></svg>`;
        nextButton.classList.add('slider-nav', 'next');
        nextButton.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24" fill="currentColor"><path d="M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6z"/></svg>`;

        sliderContainer.parentElement.appendChild(prevButton);
        sliderContainer.parentElement.appendChild(nextButton);

        let scrollAmount = 0;
        const slideWidth = brandItems[0].offsetWidth + 10; // Item width + margin
        const containerWidth = sliderContainer.offsetWidth;

        // Update scroll for responsiveness
        const updateScrollWidth = () => {
            scrollAmount = 0;
            sliderContainer.scrollLeft = 0;
        };

        window.addEventListener('resize', updateScrollWidth);

        // Scroll functionality
        prevButton.addEventListener('click', () => {
            sliderContainer.scrollBy({ left: -slideWidth, behavior: 'smooth' });
        });

        nextButton.addEventListener('click', () => {
            sliderContainer.scrollBy({ left: slideWidth, behavior: 'smooth' });
        });

        brandItems.forEach(item => {
            item.addEventListener('click', async () => {
                const brand = item.getAttribute('data-brand');
                collectionTitle.textContent = `Shop ${brand}`;
                productGrid.innerHTML = '<p>Loading...</p>';

                const response = await fetch(`/collections/${brand.toLowerCase()}/products.json`);
                const { products } = await response.json();

                productGrid.innerHTML = products.map(product => `
                <div class="product-item">
                    <a href="${product.url}">
                    <img src="${product.featured_image}" alt="${product.title}">
                    <h2>${product.title}</h2>
                    <p>${product.price | money}</p>
                    </a>
                </div>
                `).join('');
            });
         });

    });
{% endjavascript %}